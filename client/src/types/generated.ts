/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/api/signup': {
		post: {
			requestBody: {
				content: {
					'application/json': {
						email: string
						password: string
						firstName: string
						lastName: string
						weight: number
						age: number
						gender: string
						chessPlatform: {
							username: string
						}
						address: {
							country: string
							city: string
						}
						fightClub: {
							name: string
						}
					}
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': {
							/** @example string */
							accessToken?: string
							data?: components['schemas']['User']
						}
						'application/xml': {
							/** @example string */
							accessToken?: string
							data?: components['schemas']['User']
						}
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/login': {
		post: {
			requestBody: {
				content: {
					'application/json': {
						email: string
						password: string
					}
				}
			}
			responses: {
				/** @description OK */
				200: never
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/user/getCurrentUser': {
		get: {
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/user/{id}': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
		/** @description Для внутренних нужд разработчиков, не использовать в коде. */
		delete: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/users': {
		get: {
			parameters: {
				query?: {
					search?: string
					limit?: number
					offset?: number
					ageFrom?: number
					ageTo?: number
					weightFrom?: number
					weightTo?: number
					withWomen?: boolean
					withMen?: boolean
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': {
							items?: components['schemas']['User'][]
							/** @example 0 */
							total?: number
						}
						'application/xml': {
							items?: components['schemas']['User'][]
							/** @example 0 */
							total?: number
						}
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/user/{id}/nearestPair': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description Each attrubute can be null. If pair is null, then the user is waiting in the "Next Round Participants" */
				200: {
					content: {
						'application/json': {
							pair?: components['schemas']['Pair']
							/** @example 8 */
							roundDivider?: number
						}
						'application/xml': {
							pair?: components['schemas']['Pair']
							/** @example 8 */
							roundDivider?: number
						}
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/user': {
		/** @description Для внутренних нужд разработчиков, не использовать в коде. */
		post: {
			requestBody: {
				content: {
					'application/json': components['schemas']['UserBody']
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
		/** @description Для внутренних нужд разработчиков, не использовать в коде. */
		patch: {
			requestBody: {
				content: {
					'application/json': components['schemas']['User']
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/user/currentUser': {
		patch: {
			requestBody: {
				content: {
					'application/json': components['schemas']['User']
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['User']
						'application/xml': components['schemas']['User']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description Competition successfully obtained. */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
		/** @description Удалять смогут только разработчики, будет удалено из апи перед релизом. Не использовать в коде. */
		delete: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
		/** @description Редактировать смогут только разработчики, будет удалено из апи перед релизом. Не использовать в коде. */
		patch: {
			parameters: {
				path: {
					id: string
				}
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['Competition']
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competitions': {
		get: {
			responses: {
				/** @description Competition successfully obtained. */
				200: {
					content: {
						'application/json': components['schemas']['Competition'][]
						'application/xml': components['schemas']['Competition'][]
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition': {
		/** @description Cоздавать смогут только разработчики, будет удалено из апи перед релизом. Не использовать в коде. */
		post: {
			requestBody: {
				content: {
					'application/json': components['schemas']['CompetitionBody']
				}
			}
			responses: {
				/** @description Competition successfully created. */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/defineWinner': {
		patch: {
			requestBody: {
				content: {
					'application/json': {
						competitionId: string
						groupId: string
						pairId: string
						winnerId?: string
						loserId?: string
					}
				}
			}
			responses: {
				/** @description Winner defined. */
				200: never
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/launchNextGroupRound': {
		patch: {
			requestBody: {
				content: {
					'application/json': {
						competitionId: string
						groupId: string
					}
				}
			}
			responses: {
				/** @description Next Group Round launched. */
				200: never
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/callPairPreparation': {
		patch: {
			requestBody: {
				content: {
					'application/json': {
						competitionId: string
						groupId: string
						pairId: string
					}
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/setJudgesToCompetition': {
		patch: {
			requestBody: {
				content: {
					'application/json': {
						judgesIds: string[]
						competitionId: string
					}
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/setCompetitionGroupsOrders': {
		patch: {
			parameters: {
				path: {
					id: string
				}
			}
			requestBody: {
				content: {
					'application/json': {
						orders: {
							groupId: string
							order: number
						}[]
					}
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/start': {
		patch: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description OK */
				200: never
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/zoomLink': {
		/** @description Редактировать смогут только разработчики, будет удалено из апи перед релизом. Не использовать в коде. */
		patch: {
			parameters: {
				path: {
					id: string
				}
			}
			requestBody: {
				content: {
					'application/json': unknown
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/group': {
		post: {
			parameters: {
				path: {
					id: string
				}
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['CompetitionGroupBody']
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/groups': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['CompetitionGroup'][]
						'application/xml': components['schemas']['CompetitionGroup'][]
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/addNewParticipant': {
		patch: {
			parameters: {
				path: {
					id: string
				}
			}
			requestBody: {
				content: {
					'application/json': {
						userId: string
					}
				}
			}
			responses: {
				/** @description OK */
				200: {
					content: {
						'application/json': components['schemas']['Competition']
						'application/xml': components['schemas']['Competition']
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/participants': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description Competition's Participants */
				200: {
					content: {
						'application/json': components['schemas']['User'][]
						'application/xml': components['schemas']['User'][]
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
	'/api/competition/{id}/judges': {
		get: {
			parameters: {
				path: {
					id: string
				}
			}
			responses: {
				/** @description Competition's Judges */
				200: {
					content: {
						'application/json': components['schemas']['User'][]
						'application/xml': components['schemas']['User'][]
					}
				}
				/** @description Client error. */
				400: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Unauthorized error. */
				401: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Permissions error. */
				403: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Not Found error. */
				404: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
				/** @description Internal server error. */
				500: {
					content: {
						'application/json': {
							/** @example string */
							error?: string
						}
						'application/xml': {
							/** @example string */
							error?: string
						}
					}
				}
			}
		}
	}
}

export type webhooks = Record<string, never>

export interface components {
	schemas: {
		/** Competition */
		Competition: {
			/** Format: date-time */
			startDate: string
			/** Format: date-time */
			endDate?: string
			/** Format: date-time */
			registrationEndsAt: string
			name: string
			description?: string
			groups?: {
				ageCategory?: {
					from?: number
					to?: number
				}
				weightCategory?: {
					from?: number
					to?: number
				}
				gender: string
				currentRoundNumber: number
				order?: number
				nextRoundParticipants?: string[]
				allParticipants?: string[]
				passedPairs?: {
					roundNumber?: number
					blackParticipant?: string
					whiteParticipant?: string
					winner?: string
					passed?: boolean
					order?: number
					calledForPreparation?: boolean
					calledForFight?: boolean
					judge?: string
					_id?: string
				}[]
				currentRoundPairs?: {
					roundNumber?: number
					blackParticipant?: string
					whiteParticipant?: string
					winner?: string
					passed?: boolean
					order?: number
					calledForPreparation?: boolean
					calledForFight?: boolean
					judge?: string
					_id?: string
				}[]
				_id?: string
			}[]
			price?: {
				currentValue?: number
				pricesChanges?: {
					daysBeforeRegistrationDate: number
					newValue: number
				}[]
			}
			zoomLink?: string
			requirements?: {
				ageCategory?: {
					from?: number
					to?: number
				}
				weightCategory?: {
					from?: number
					to?: number
				}
				gender?: string
			}
			lastOrder?: {
				group?: number
				pair?: number
			}
			participants?: string[]
			judges?: string[]
			_id?: string
		}
		/** User */
		User: {
			email: string
			chessPlatform?: {
				username?: string
			}
			hashedPassword: string
			firstName: string
			lastName: string
			fullName: string
			address?: {
				country?: string
				city?: string
			}
			fightClub?: {
				name?: string
			}
			/** @enum {string} */
			role: 'participant' | 'judge' | 'chief_judge' | 'admin'
			age: number
			socialNetworks?: {
				whatsup?: string
			}
			/** @enum {string} */
			gender: 'woman' | 'man'
			ratingNumber: number
			weight: number
			competition?: string
			currentGroupId?: string
			competitionsHistory?: {
				competitionId?: string
				groupId?: string
				placeNumber?: number
			}[]
			_id?: string
		}
		/** CompetitionGroup */
		CompetitionGroup: {
			ageCategory?: {
				from?: number
				to?: number
			}
			weightCategory?: {
				from?: number
				to?: number
			}
			gender: string
			currentRoundNumber: number
			order?: number
			nextRoundParticipants?: string[]
			allParticipants?: string[]
			passedPairs?: {
				roundNumber?: number
				blackParticipant?: string
				whiteParticipant?: string
				winner?: string
				passed?: boolean
				order?: number
				calledForPreparation?: boolean
				calledForFight?: boolean
				judge?: string
				_id?: string
			}[]
			currentRoundPairs?: {
				roundNumber?: number
				blackParticipant?: string
				whiteParticipant?: string
				winner?: string
				passed?: boolean
				order?: number
				calledForPreparation?: boolean
				calledForFight?: boolean
				judge?: string
				_id?: string
			}[]
			_id?: string
		}
		/** Pair */
		Pair: {
			roundNumber?: number
			blackParticipant?: string
			whiteParticipant?: string
			winner?: string
			passed?: boolean
			order?: number
			calledForPreparation?: boolean
			calledForFight?: boolean
			judge?: string
			_id?: string
		}
		/** Competition */
		CompetitionBody: {
			/** Format: date-time */
			startDate: string
			/** Format: date-time */
			endDate?: string
			/** Format: date-time */
			registrationEndsAt: string
			name: string
			description?: string
			groups?: {
				ageCategory?: {
					from?: number
					to?: number
				}
				weightCategory?: {
					from?: number
					to?: number
				}
				gender: string
				currentRoundNumber: number
				order?: number
				nextRoundParticipants?: string[]
				allParticipants?: string[]
				passedPairs?: {
					roundNumber?: number
					blackParticipant?: string
					whiteParticipant?: string
					winner?: string
					passed?: boolean
					order?: number
					calledForPreparation?: boolean
					calledForFight?: boolean
					judge?: string
				}[]
				currentRoundPairs?: {
					roundNumber?: number
					blackParticipant?: string
					whiteParticipant?: string
					winner?: string
					passed?: boolean
					order?: number
					calledForPreparation?: boolean
					calledForFight?: boolean
					judge?: string
				}[]
			}[]
			price?: {
				currentValue?: number
				pricesChanges?: {
					daysBeforeRegistrationDate: number
					newValue: number
				}[]
			}
			zoomLink?: string
			requirements?: {
				ageCategory?: {
					from?: number
					to?: number
				}
				weightCategory?: {
					from?: number
					to?: number
				}
				gender?: string
			}
			lastOrder?: {
				group?: number
				pair?: number
			}
			participants?: string[]
			judges?: string[]
		}
		/** User */
		UserBody: {
			email: string
			chessPlatform?: {
				username?: string
			}
			hashedPassword: string
			firstName: string
			lastName: string
			fullName: string
			address?: {
				country?: string
				city?: string
			}
			fightClub?: {
				name?: string
			}
			/** @enum {string} */
			role: 'participant' | 'judge' | 'chief_judge' | 'admin'
			age: number
			socialNetworks?: {
				whatsup?: string
			}
			/** @enum {string} */
			gender: 'woman' | 'man'
			ratingNumber: number
			weight: number
			competition?: string
			currentGroupId?: string
			competitionsHistory?: {
				competitionId?: string
				groupId?: string
				placeNumber?: number
			}[]
		}
		/** CompetitionGroup */
		CompetitionGroupBody: {
			ageCategory?: {
				from?: number
				to?: number
			}
			weightCategory?: {
				from?: number
				to?: number
			}
			gender: string
			currentRoundNumber: number
			order?: number
			nextRoundParticipants?: string[]
			allParticipants?: string[]
			passedPairs?: {
				roundNumber?: number
				blackParticipant?: string
				whiteParticipant?: string
				winner?: string
				passed?: boolean
				order?: number
				calledForPreparation?: boolean
				calledForFight?: boolean
				judge?: string
			}[]
			currentRoundPairs?: {
				roundNumber?: number
				blackParticipant?: string
				whiteParticipant?: string
				winner?: string
				passed?: boolean
				order?: number
				calledForPreparation?: boolean
				calledForFight?: boolean
				judge?: string
			}[]
		}
		/** Pair */
		PairBody: {
			roundNumber?: number
			blackParticipant?: string
			whiteParticipant?: string
			winner?: string
			passed?: boolean
			order?: number
			calledForPreparation?: boolean
			calledForFight?: boolean
			judge?: string
		}
	}
	responses: never
	parameters: never
	requestBodies: never
	headers: never
	pathItems: never
}

export type external = Record<string, never>

export type operations = Record<string, never>
